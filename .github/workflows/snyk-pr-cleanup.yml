name: ðŸª¥ Snyk PR cleanup

on: 
  workflow_call:
    secrets:
      snyk_token:
        required: true
      snyk_org_id:
        required: true
env:
  SNYK_TAG_MAX_LENGTH: 50
  SNYK_GROUP_ID: bbaafe05-867d-4760-8d55-4cb21a1c8b3b

jobs:
  do_snyk_project_cleanup_when_pr_closed:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        
      - name: figure out and set the correct values for repo name and branch name
        run: |
          REAL_BRANCH=$GITHUB_REF_NAME
          if [[ ${GITHUB_EVENT_NAME} == "pull_request" ]]; then 
            REAL_BRANCH=$GITHUB_HEAD_REF 
          fi 
          
          # snyk tag limitation - limit length to SNYK_TAG_MAX_LENGTH
          REAL_BRANCH=$(echo $REAL_BRANCH | cut -c1-${{ env.SNYK_TAG_MAX_LENGTH }})  
            
          # snyk tag limitation - replace '/' with '_'
          TAG_REPO=${GITHUB_REPOSITORY//\//_}
          TAG_BRANCH=${REAL_BRANCH//\//_}

          # snyk tag limitation - replace '.' with '-'
          TAG_REPO=${TAG_REPO//./-}
          TAG_BRANCH=${TAG_BRANCH//./-}
          
          # snyk tag limitation - replace '+' with '_'
          TAG_REPO=${TAG_REPO//+/_}
          TAG_BRANCH=${TAG_BRANCH//+/_}
          
          echo "TAG_REPO = [$TAG_REPO]"        
          echo "TAG_BRANCH = [$TAG_BRANCH]"
          
          # make sure on other unsupported characters
          if  [[ "$TAG_BRANCH" =~ [^a-zA-Z0-9_+/\.\-] ]]; then
            echo "$TAG_BRANCH contains invalid characters for synk tags - only allow alphanumerics and '/', '.', '-', '+', '_' "
            exit 2
          fi 

          echo "TAG_REPO=${TAG_REPO}" >> $GITHUB_ENV
          echo "TAG_BRANCH=${TAG_BRANCH}" >> $GITHUB_ENV
          echo "SNYK_FILTER_FILE=_synk_filter.json" >> $GITHUB_ENV
          echo "SNYK_TAG_FILE=_synk_tag.json" >> $GITHUB_ENV

      - name: use the repo and branch name to create filter file for the snyk projects
        run: |
          cat << EOF > ${SNYK_FILTER_FILE}
          {
            "filters": {
              "tags": {
                "includes": [
                  {
                    "key": "repo",
                    "value": "${TAG_REPO}"
                  },
                  {
                    "key": "branch",
                    "value": "${TAG_BRANCH}"
                  }
                ]
              }
            }
          }
          EOF

      - name: use branch name to create filter file for tag removal
        run: |
          cat << EOF > ${SNYK_TAG_FILE}
          {
            "key":"branch",
            "value":"${TAG_BRANCH}",
            "force": false
          }
          EOF
          echo "_____ ${SNYK_TAG_FILE} _____"
          cat ${SNYK_TAG_FILE}

      - name: delete all snyk projects associated with this repo and the guarded branch
        run: |
          # retrieve all snyk project ids associated with this repo and the guarded branch
          ids=$(curl -sS -q -X POST -H "Authorization:${{ secrets.snyk_token }}" -H "Content-Type:application/json" \
                  -d "@${SNYK_FILTER_FILE}" https://snyk.io/api/v1/org/${{ secrets.snyk_org_id }}/projects  \
                | jq -r '.projects[].id' )

          # if return an empty set then we are done
          if [[ -z "$ids" ]]; then
            echo "empty snyk project is found, do nothing and exiting ..."
            exit 0
          fi
          
          delete_ok=true

          # remove the selected snyk project
          while read -r id; do
            http_code=$(curl -sS -w '%{http_code}' -o /dev/null -X DELETE -H "Authorization:${{ secrets.snyk_token }}" \
              "https://snyk.io/api/v1/org/${{ secrets.snyk_org_id }}/project/$id")

            if [ "${http_code}" -eq 200 ]; then
              echo "deleted snyk project id = [$id]"
            else
              delete_ok=false
              echo "::error ::Failed to delete snyk project id = [$id], http_code = [$http_code] skipping... "
            fi
          done <<< "$ids"

          if [ "${delete_ok}" = false ]; then
            exit 1
          fi

      - name: try to remove the tag associated with the branch, if not used by others
        run: |
          curl -q -X POST -H "Authorization:${{ secrets.snyk_token }}" -H "Content-Type:application/json" \
            https://snyk.io/api/v1/group/${{ env.SNYK_GROUP_ID }}/tags/delete  \
            -d "@${SNYK_TAG_FILE}"
